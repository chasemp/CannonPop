class i{constructor(){this.STORAGE_KEY="cannonpop_theme",this.init()}init(){const e=this.getSavedTheme();this.applyTheme(e),window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").addEventListener("change",t=>{this.getSavedTheme()||this.applyTheme(t.matches?"dark":"light")})}getSavedTheme(){const e=localStorage.getItem(this.STORAGE_KEY);return e||(window.matchMedia&&window.matchMedia("(prefers-color-scheme: dark)").matches?"dark":"light")}applyTheme(e){const t=document.documentElement,a=document.body;t.classList.remove("light-theme","dark-theme"),a.classList.remove("light-theme","dark-theme"),t.removeAttribute("data-theme"),e==="dark"?(t.classList.add("dark-theme"),a.classList.add("dark-theme"),t.setAttribute("data-theme","dark")):(t.classList.add("light-theme"),a.classList.add("light-theme"),t.setAttribute("data-theme","light"));const s=document.querySelector('meta[name="theme-color"]');s&&s.setAttribute("content",e==="dark"?"#1e1e2e":"#fff5e1"),console.log(`ðŸŽ¨ Theme applied: ${e}`)}setTheme(e){localStorage.setItem(this.STORAGE_KEY,e),this.applyTheme(e),window.dispatchEvent(new CustomEvent("themechange",{detail:{theme:e}}))}getTheme(){return this.getSavedTheme()}toggleTheme(){const t=this.getTheme()==="dark"?"light":"dark";return this.setTheme(t),t}}const h=new i;window.themeManager=h;document.readyState==="loading"?document.addEventListener("DOMContentLoaded",()=>{h.init()}):h.init();export{h as default};
